name: CI

on: [push]

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
          cache: true
          
      - name: Install linters
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install golang.org/x/lint/golint@latest
          
      - name: Run tests
        shell: bash
        run: |
          set -e
          go mod tidy
          
          # Проверка стиля и статического анализа
          echo "Running vet..."
          go vet ./...
          echo "Running golint (non-fatal)..."
          ~/go/bin/golint ./... || echo "⚠️ Lint issues found (not failing build)"
          echo "Running staticcheck..."
          ~/go/bin/staticcheck ./...
          
          # Запуск тестов
          echo "Running tests..."
          for pkg in $(go list ./... | grep -v "/cmd/"); do
            mkdir -p "${pkg#*/}/coverage"
            go test -v -coverprofile="${pkg#*/}/coverage.out" "$pkg"
          done
          
          # Объединение отчетов
          echo "mode: set" > full-coverage.out
          find . -name "coverage.out" -exec grep -h -v "^mode:" {} >> full-coverage.out \;
          
          # Проверка покрытия
          COVERAGE=$(go tool cover -func=full-coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "❌ Coverage is too low: $COVERAGE% (min 90%)"
            exit 1
          else
            echo "✅ Coverage: $COVERAGE%"
          fi

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: full-coverage.out

  # Новый шаг для DockerHub (работает только если тесты прошли)
  docker-build-push:
    needs: test  # Зависит от успеха тестов
    runs-on: ubuntu-latest  # Сборка Docker требует Linux
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app-go:latest

