package main

import (
	"database/sql"
	//"fmt"
	"log"
	"os"

	_ "modernc.org/sqlite"
)

func main() {
	log.Println("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

	// –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
	os.MkdirAll("data", 0755)

	// –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î
	db, err := sql.Open("sqlite", "./data/todoapp.db")
	if err != nil {
		log.Fatal("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ë–î:", err)
	}
	defer db.Close()

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
	if err := db.Ping(); err != nil {
		log.Fatal("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", err)
	}

	log.Println("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞!")

	// –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
	tables := []string{
		`CREATE TABLE IF NOT EXISTS users (
			id INTEGER PRIMARY KEY AUTOINCREMENT,
			device_id TEXT UNIQUE NOT NULL,
			telegram_id INTEGER UNIQUE,
			fcm_token TEXT,
			created_at DATETIME NOT NULL,
			updated_at DATETIME NOT NULL
		)`,

		`CREATE TABLE IF NOT EXISTS tasks (
			id INTEGER PRIMARY KEY AUTOINCREMENT,
			user_id INTEGER REFERENCES users(id),
			description TEXT NOT NULL,
			created_at DATETIME NOT NULL,
			updated_at DATETIME NOT NULL,
			completed BOOLEAN NOT NULL DEFAULT FALSE,
			priority TEXT NOT NULL DEFAULT 'medium',
			due_date DATETIME,
			tags TEXT
		)`,

		`CREATE TABLE IF NOT EXISTS subtasks (
			id INTEGER PRIMARY KEY AUTOINCREMENT,
			user_id INTEGER REFERENCES users(id),
			task_id INTEGER NOT NULL,
			description TEXT NOT NULL,
			created_at DATETIME NOT NULL,
			updated_at DATETIME NOT NULL,
			completed BOOLEAN NOT NULL DEFAULT FALSE,
			FOREIGN KEY (task_id) REFERENCES tasks (id) ON DELETE CASCADE
		)`,
	}

	for i, table := range tables {
		_, err = db.Exec(table)
		if err != nil {
			log.Fatal("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:", err)
		}
		log.Printf("‚úÖ –¢–∞–±–ª–∏—Ü–∞ %d —Å–æ–∑–¥–∞–Ω–∞", i+1)
	}

	// –°–æ–∑–¥–∞–µ–º default –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	_, err = db.Exec(`INSERT INTO users (device_id, created_at, updated_at) 
		VALUES ('default_legacy_user', datetime('now'), datetime('now'))`)
	if err != nil {
		log.Println("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞:", err)
	} else {
		log.Println("‚úÖ Default –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
	}
_, err = db.Exec(`UPDATE users SET telegram_id = MY_ID NUMBER WHERE device_id = 'default_legacy_user'`)
if err != nil {
    log.Println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ Telegram ID:", err)
} else {
    log.Println("‚úÖ –í–∞—à Telegram ID –ø—Ä–∏–≤—è–∑–∞–Ω –∫ default –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
}
	log.Println("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
	log.Println("üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: data/todoapp.db")
}